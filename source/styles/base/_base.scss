$baseFontFamily: "Lato", "Droid Sans", Arial, Sans-serif;
$baseHeaderFontFamily: "Montserrat", "Droid Sans", Arial, Sans-serif;

$baseBottomMargin: 2.5rem;

// Theme
// Skin
// Accent
// Primary and secondary colors
// Accent colors
// Neutrals
// Semantic colors

$baseFontColour:#222;
$baseFontHeaderColour:#333;
$baseLinkColour:#4a90e2;
$baseFirstThemeColour:#ccc;
$baseSecondThemeColour:#eee;

$black: #222;
$darkGrey: #666;
$grey: #999;
$lightGrey: #efefef;
$white: #fff;
$offWhite: #fefefe;
$red: #f00;
$highlightColour: $baseLinkColour;

$errorBackgroundColour: #f2dede;
$errorBorderColour: darken($errorBackgroundColour, 5%);
$errorTextColour: #a94442;
$informationBackgroundColour: #d9edf7;
$informationBorderColour: darken($informationBackgroundColour, 5%);
$informationTextColour: #31708f;
$successBackgroundColour: #dff0d8;
$successBorderColour: darken($successBackgroundColour, 5%);
$successTextColour: #3c763d;
$warningBackgroundColour: #fcf8e3;
$warningBorderColour: darken($warningBackgroundColour, 5%);
$warningTextColour: #8a6d3b;

/**
 * Media Query Breakpoints (in px)
 */

$break-midmobile: 400;
$break-small: 481;
$break-medium: 600;
$break-large: 768;
$break-xlarge: 960;
$break-wide: 1280;
$break-xwide: 1400;
$break-xxwide: 1600;
$break-r-u-insane: 1840;

$site-max-width:80rem; // insert your sane value here

@mixin respond-to($media) {
    @if $media == midmobile {
        @media only screen and (min-width: ($break-midmobile / 16) + "em") {
           @content;
        }
    }
    @if $media == small-screens {
        @media only screen and (min-width: ($break-small / 16) + "em") {
           @content;
        }
    }
    @if $media == medium-screens {
        @media only screen and (min-width: ($break-medium / 16) + "em") {
           @content;
        }
    }
    @if $media == large-screens {
        @media only screen and (min-width: ($break-large / 16) + "em") {
           @content;
        }
    }
    // @if $media == up-to-large-screens {
    //     @media only screen and (max-width: (($break-large - 1) / 16) + "em") {
    //        @content;
    //     }
    // }
    @if $media == xlarge-screens {
        @media only screen and (min-width: ($break-xlarge / 16) + "em") {
           @content;
        }
    }
    @if $media == wide-screens {
        @media only screen and (min-width: ($break-wide / 16) + "em") {
           @content;
        }
    }
    @if $media == xwide-screens {
        @media only screen and (min-width: ($break-xwide / 16) + "em") {
           @content;
        }
    }
    @if $media == xxwide-screens {
        @media only screen and (min-width: ($break-xxwide / 16) + "em") {
           @content;
        }
    }
    @if $media == r-u-insane {
        @media only screen and (min-width: ($break-r-u-insane / 16) + "em") {
           @content;
        }
    }
}

// Mixin: REM to Px
// @function remToPx($number) {
//     @return #{$number}rem;
//}

%clearfix, %group {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}
